name: Deploy Flask App to ECS

on:
  push:
    branches:
      - main  # Change if your main branch is different

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push Docker image to ECR
      env:
        ECR_REPOSITORY: ${{ secrets.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
        docker tag $ECR_REPOSITORY:$IMAGE_TAG ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:$IMAGE_TAG
        docker push ${{ steps.login-ecr.outputs.registry }}/${ECR_REPOSITORY}:$IMAGE_TAG

    - name: Update ECS service with new image
      env:
        CLUSTER_NAME: ${{ secrets.ECS_CLUSTER_NAME }}
        SERVICE_NAME: ${{ secrets.ECS_SERVICE_NAME }}
        TASK_FAMILY: ${{ secrets.ECS_TASK_DEFINITION }}
        IMAGE_URI: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.ECR_REPOSITORY }}:${{ github.sha }}
      run: |
        # Register a new task definition revision with updated image
        TASK_DEFINITION_JSON=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY)

        NEW_TASK_DEF=$(echo $TASK_DEFINITION_JSON | jq --arg IMAGE_URI "$IMAGE_URI" '.taskDefinition.containerDefinitions[0].image = $IMAGE_URI | {family: .taskDefinition.family, containerDefinitions: .taskDefinition.containerDefinitions, volumes: .taskDefinition.volumes, taskRoleArn: .taskDefinition.taskRoleArn, executionRoleArn: .taskDefinition.executionRoleArn, networkMode: .taskDefinition.networkMode, requiresCompatibilities: .taskDefinition.requiresCompatibilities, cpu: .taskDefinition.cpu, memory: .taskDefinition.memory}')

        echo "$NEW_TASK_DEF" > new-task-def.json

        aws ecs register-task-definition --cli-input-json file://new-task-def.json

        # Update service to use the new task definition revision
        NEW_REVISION=$(aws ecs describe-task-definition --task-definition $TASK_FAMILY | jq '.taskDefinition.revision')

        aws ecs update-service --cluster $CLUSTER_NAME --service $SERVICE_NAME --task-definition "$TASK_FAMILY:$NEW_REVISION"
